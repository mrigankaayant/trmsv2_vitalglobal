package com.ayantsoft.vitalglobal.pojo;
// Generated 21 Dec, 2017 4:58:49 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Documents generated by hbm2java
 */
@Entity
@Table(name = "documents", catalog = "ayant_trmsv2")
public class Documents implements java.io.Serializable {

	private Integer id;
	private String name;
	private String description;
	private String filename;
	private String filepath;
	private String contenttype;
	private Date created;
	private Date expiredDate;
	private Set<Candidate> candidates = new HashSet<Candidate>(0);
	private Set<CandidateCheckList> candidateCheckLists = new HashSet<CandidateCheckList>(0);

	public Documents() {
	}

	public Documents(String name, String description, String filename, String filepath, String contenttype,
			Date created, Date expiredDate, Set<Candidate> candidates, Set<CandidateCheckList> candidateCheckLists) {
		this.name = name;
		this.description = description;
		this.filename = filename;
		this.filepath = filepath;
		this.contenttype = contenttype;
		this.created = created;
		this.expiredDate = expiredDate;
		this.candidates = candidates;
		this.candidateCheckLists = candidateCheckLists;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", length = 200)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "filename", length = 100)
	public String getFilename() {
		return this.filename;
	}

	public void setFilename(String filename) {
		this.filename = filename;
	}

	@Column(name = "filepath", length = 200)
	public String getFilepath() {
		return this.filepath;
	}

	public void setFilepath(String filepath) {
		this.filepath = filepath;
	}

	@Column(name = "contenttype", length = 100)
	public String getContenttype() {
		return this.contenttype;
	}

	public void setContenttype(String contenttype) {
		this.contenttype = contenttype;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created", length = 10)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "expired_date", length = 10)
	public Date getExpiredDate() {
		return this.expiredDate;
	}

	public void setExpiredDate(Date expiredDate) {
		this.expiredDate = expiredDate;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "candidate_has_documents", catalog = "ayant_trmsv2", joinColumns = {
			@JoinColumn(name = "documentsId", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "candidateId", nullable = false, updatable = false) })
	public Set<Candidate> getCandidates() {
		return this.candidates;
	}

	public void setCandidates(Set<Candidate> candidates) {
		this.candidates = candidates;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "checklist_has_documents", catalog = "ayant_trmsv2", joinColumns = {
			@JoinColumn(name = "documents_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "checklist_id", nullable = false, updatable = false) })
	public Set<CandidateCheckList> getCandidateCheckLists() {
		return this.candidateCheckLists;
	}

	public void setCandidateCheckLists(Set<CandidateCheckList> candidateCheckLists) {
		this.candidateCheckLists = candidateCheckLists;
	}

}
